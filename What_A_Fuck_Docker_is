Команды в Dockerfile
Dockerfile — это текстовый файл с инструкциями для сборки Docker-образа. Основные команды:

FROM – задаёт базовый образ (например, FROM ubuntu:22.04).

RUN – выполняет команду в контейнере во время сборки (например, RUN apt-get update).

COPY – копирует файлы из хоста в образ (например, COPY app.py /app/).

ADD – аналогично COPY, но поддерживает URL и автоматическое распаковку архивов.

WORKDIR – задаёт рабочую директорию для последующих команд.

ENV – устанавлевает переменные окружения (например, ENV PYTHONPATH=/app).

ARG – определяет переменные, которые можно передать при сборке (docker build --build-arg).

EXPOSE – указывает, какие порты контейнер будет слушать (например, EXPOSE 8080).

CMD – задаёт команду по умолчанию для запуска контейнера (например, CMD ["python", "app.py"]).

ENTRYPOINT – аналогично CMD, но труднее переопределить.

USER – задаёт пользователя, от которого будут выполняться команды.

VOLUME – создаёт точку монтирования для внешних данных.

LABEL – добавляет метаданные (например, LABEL version="1.0").

HEALTHCHECK – проверяет здоровье контейнера.

ONBUILD – задаёт команды, которые выполнятся при использовании этого образа как базового.

Слои в Docker (Image Layers)
Каждая инструкция в Dockerfile создаёт новый слой (layer). Слои:

Иммутабельны (не изменяются после создания).

Кешируются – если команда не изменилась, Docker использует кешированный слой.

Увеличивают размер образа – каждый слой добавляет данные.

Какие команды создают слои?
Слои создают команды:

RUN

COPY

ADD

Остальные команды (ENV, WORKDIR, LABEL и др.) обычно не создают новых слоёв, но могут влиять на метаданные.
Оптимизация слоёв
Объединяйте RUN-команды (через && и \), чтобы уменьшить число слоёв.

Используйте .dockerignore, чтобы не копировать лишние файлы.

Многострочные команды (RUN, COPY) лучше группировать.
